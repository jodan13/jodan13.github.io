{"version":3,"sources":["reportWebVitals.ts","components/header/index.tsx","components/header/header.tsx","components/footer/index.tsx","components/footer/footer.tsx","components/popover/popover.tsx","components/popover/index.tsx","components/form/form.tsx","components/form/index.tsx","components/app/index.tsx","components/app/app.tsx","reducers/index.ts","store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","Footer","PopoverElement","referenceElement","isVisible","popperElement","useRef","arrowElement","popperOffsetWidth","current","offsetWidth","usePopper","modifiers","name","options","element","offset","styles","attributes","ref","style","popper","data-show","arrow","Popover","useState","setVisibility","fixThePopover","setFixThePopover","attributesIcon","setAttributesIcon","useEffect","onMouseEnter","onMouseLeave","onClick","form","reduxForm","props","handleSubmit","personalIncomeTax","paymentType","salary","change","salaryIncomeTax","salaryEmployee","value","setValues","amount","Number","replace","newValues","toFixed","onSubmit","Field","type","component","onChange","console","log","selector","formValueSelector","Form","connect","state","initialValues","App","values","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26a7c437.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Header from \"./header\";\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\ninterface NavbarProps {\r\n}\r\nconst Header: React.FC<NavbarProps> = () => {\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-brand mb-0 h1\">Monthly salary</span>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import Footer from \"./footer\";\r\nexport default Footer;","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer mt-auto py-3 bg-light\">\r\n      <div className=\"container\">\r\n        <span className=\"text-muted\">Developed by Eugene</span>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\nexport default Footer","import { useEffect, useRef, useState } from \"react\";\r\nimport { usePopper } from \"react-popper\";\r\nimport \"./popover.scss\";\r\n\r\n\r\nconst PopoverElement = ({referenceElement, isVisible}: any) => {\r\n  const popperElement = useRef<HTMLDivElement>(null);\r\n  const arrowElement = useRef<HTMLDivElement>(null);\r\n\r\n  let popperOffsetWidth = 0;\r\n\r\n  if (popperElement.current && referenceElement.current) {\r\n    popperOffsetWidth = popperElement.current!.offsetWidth / 2;\r\n  }\r\n  const { styles, attributes } = usePopper(\r\n    referenceElement.current,\r\n    popperElement.current,\r\n    {\r\n      modifiers: [\r\n        { name: \"arrow\", options: { element: arrowElement.current } },\r\n        { name: \"offset\", options: { offset: [popperOffsetWidth, 10] } },\r\n      ],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={popperElement}\r\n        className=\"popper\"\r\n        style={styles.popper}\r\n        data-show={isVisible}\r\n        {...attributes.popper}\r\n      >\r\n        МРОТ &mdash; минимальный размер оплаты труда. Разный для разных\r\n        регионов.\r\n        <div ref={arrowElement} style={styles.arrow} className=\"arrow\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst Popover = () => {\r\n  const [isVisible, setVisibility] = useState(false);\r\n  const [fixThePopover, setFixThePopover] = useState(false);\r\n  const [attributesIcon, setAttributesIcon] = useState({});\r\n  const referenceElement = useRef<HTMLElement>(null);\r\n  useEffect(() => {\r\n    if (fixThePopover) {\r\n      setAttributesIcon({ className: \"bi bi-x-circle icon\" });\r\n    } else {\r\n      setAttributesIcon({\r\n        className: \"bi bi-info-circle icon\",\r\n        onMouseEnter: () => setVisibility(true),\r\n        onMouseLeave: () => setVisibility(false),\r\n      });\r\n    }\r\n  }, [fixThePopover]);\r\n  return (\r\n    <>\r\n    <i\r\n      ref={referenceElement}\r\n      onClick={() => setFixThePopover(!fixThePopover)}\r\n      {...attributesIcon}\r\n    ></i>\r\n    <PopoverElement referenceElement={referenceElement} isVisible={isVisible} />\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Popover;\r\n","import Popover from \"./popover\";\r\nexport default Popover;","import { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Field,\r\n  formValueSelector,\r\n  InjectedFormProps,\r\n  reduxForm,\r\n} from \"redux-form\";\r\nimport Popover from \"../popover\";\r\n\r\nimport \"./form.scss\";\r\n\r\ntype TypeSalary =\r\n  | \"monthly salary\"\r\n  | \"minimal salary\"\r\n  | \"payment per day\"\r\n  | \"payment per hour\";\r\n\r\ninterface Props {\r\n  paymentType: TypeSalary;\r\n  personalIncomeTax: boolean;\r\n  salary: string;\r\n}\r\n\r\ninterface FormData {\r\n  paymentType: TypeSalary;\r\n  personalIncomeTax: boolean;\r\n  salary: string;\r\n}\r\n\r\nconst Form: React.FC<Props & InjectedFormProps<FormData, Props>> = (\r\n  props: any\r\n) => {\r\n  const {\r\n    handleSubmit,\r\n    personalIncomeTax = \"\",\r\n    paymentType,\r\n    salary = \"\",\r\n    change\r\n  } = props;\r\n  const [value, setValues] = useState({\r\n    salaryIncomeTax: \"0\",\r\n    salaryEmployee: \"0\",\r\n    salary: \"0\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const amount = Number(salary.replace(/ /g, \"\"));\r\n    if (amount > 0) {\r\n      const salaryIncomeTax = personalIncomeTax\r\n        ? amount / 0.87 - amount\r\n        : amount * 0.13;\r\n      const newValues: any = {\r\n        salary: personalIncomeTax\r\n          ? (amount + salaryIncomeTax).toFixed(0)\r\n          : amount.toFixed(0),\r\n        salaryIncomeTax: salaryIncomeTax.toFixed(0),\r\n        salaryEmployee: personalIncomeTax\r\n          ? amount.toFixed(0)\r\n          : (amount - salaryIncomeTax).toFixed(0),\r\n      };\r\n      setValues(newValues);\r\n    } else {\r\n      setValues({ salaryIncomeTax: \"0\", salaryEmployee: \"0\", salary: \"0\" });\r\n    }\r\n  }, [personalIncomeTax, salary]);\r\n\r\n  useEffect(() => {\r\n    switch (paymentType) {\r\n      case \"monthly salary\":\r\n        change(\"salary\", \"80000\");\r\n        break;\r\n      case \"minimal salary\":\r\n        change(\"salary\", \"30000\");\r\n        break;\r\n      case \"payment per day\":\r\n        change(\"salary\", \"4000\");\r\n        break;\r\n      case \"payment per hour\":\r\n        change(\"salary\", \"500\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [paymentType, change]);\r\n  return (\r\n    <>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row justify-content-center row-cols-auto h-100\">\r\n          <div className=\"col mt-5\">\r\n            <p className=\"lead\">Сумма</p>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <Field\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"paymentType\"\r\n                    value=\"monthly salary\"\r\n                    component={\"input\"}\r\n                  />\r\n                  Оклад за месяц\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <Field\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"paymentType\"\r\n                    value=\"minimal salary\"\r\n                    component={\"input\"}\r\n                  />\r\n                  МРОТ\r\n                </label>\r\n                <Popover />\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <Field\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"paymentType\"\r\n                    value=\"payment per day\"\r\n                    component={\"input\"}\r\n                  />\r\n                  Оплата за день\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check mb-3\">\r\n                <label className=\"form-check-label\">\r\n                  <Field\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"paymentType\"\r\n                    value=\"payment per hour\"\r\n                    component={\"input\"}\r\n                  />\r\n                  Оплата за час\r\n                </label>\r\n              </div>\r\n              <div className=\"d-flex personalIncomeTax\">\r\n                <span className={personalIncomeTax ? \"text-muted\" : \"\"}>\r\n                  Указать с НДФЛ\r\n                </span>\r\n                <div className=\"form-check form-switch mb-3\">\r\n                  <label className=\"form-check-label\">\r\n                    <Field\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      name=\"personalIncomeTax\"\r\n                      component={\"input\"}\r\n                    />\r\n                    <span className={!personalIncomeTax ? \"text-muted\" : \"\"}>\r\n                      Без НДФЛ\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex mb-3 salary\">\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"salary\"\r\n                  className=\"form-control\"\r\n                  component={\"input\"}\r\n                  onChange={() => console.log(\"onChange\", props)}\r\n                />\r\n                <span className=\"\">&#8381; в день</span>\r\n              </div>\r\n            </form>\r\n            {paymentType === \"monthly salary\" && (\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">\r\n                    <b>{value.salaryEmployee} &#8381;</b> сотрудник будет\r\n                    получать на руки\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>{value.salaryIncomeTax} &#8381;</b> НДФЛ, 13% от оклада\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>{value.salary} &#8381;</b> за сотрудника от оклада\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst form = reduxForm<FormData, Props>({ form: \"salary\" })(Form);\r\n\r\nconst selector = formValueSelector(\"salary\");\r\n\r\nexport default connect((state) => {\r\n  const personalIncomeTax = selector(state, \"personalIncomeTax\");\r\n  const salary = selector(state, \"salary\");\r\n  const paymentType = selector(state, \"paymentType\");\r\n  const initialValues: FormData = {\r\n    paymentType: \"monthly salary\",\r\n    personalIncomeTax: true,\r\n    salary: \"60000\",\r\n  };\r\n  return {\r\n    initialValues,\r\n    personalIncomeTax,\r\n    salary,\r\n    paymentType,\r\n  };\r\n})(form);\r\n","import Form from \"./form\";\r\nexport default Form;","import App from \"./app\";\r\nexport default App;","import { connect } from 'react-redux';\r\n\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\nimport Form from \"../form\";\r\nimport \"./app.scss\";\r\n\r\n\r\nconst App = (props: any) => {\r\n  const submit = (values: any) => {\r\n    console.log(values)\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Form onSubmit={submit} {...props}/>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(null)(App);\r\n","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({form: formReducer})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nimport App from './components/app';\nimport {store} from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}